# List of Common Git Commands

## Configuration
- `git config --global user.name "Your Name"` — Set your name.
- `git config --global user.email "you@example.com"` — Set your email.
- `git config --list` — Show current configuration.

## Repository Basics
- `git init` — Initialize a new git repository.
- `git clone <repo-url>` — Clone a remote repository.

## Status and History
- `git status` — Show the status of changes.
- `git log` — Show commit logs.
- `git log --oneline` — Compact log.
- `git show <commit>` — Show details of a commit.
- `git diff` — Show unstaged changes.
- `git diff --staged` — Show staged changes.

## Staging and Committing
- `git add <file>` — Stage a file.
- `git add .` — Stage all files.
- `git commit -m "message"` — Commit staged changes.
- `git commit -am "message"` — Stage and commit all tracked files.

## Branching and Merging
- `git branch` — List branches.
- `git branch <branch>` — Create a branch.
- `git checkout <branch>` — Switch to a branch.
- `git switch <branch>` — Switch to a branch (modern alternative).
- `git switch -c <branch>` — Create and switch to a new branch.
- `git merge <branch>` — Merge branch into current branch.
- `git rebase <branch>` — Rebase current branch onto another.

## Remote Repositories
- `git remote -v` — List remotes.
- `git remote add <name> <url>` — Add a remote.
- `git fetch <remote>` — Download objects and refs.
- `git pull` — Fetch and merge from remote.
- `git push` — Push commits to remote.
- `git push -u origin <branch>` — Set upstream and push.

## Undoing Changes
- `git restore <file>` — Restore file in working directory.
- `git checkout -- <file>` — Old way to restore file.
- `git reset` — Unstage files.
- `git reset --hard` — Reset working directory and index to last commit.
- `git revert <commit>` — Create a new commit that undoes the changes.

## Stashing
- `git stash` — Stash changes.
- `git stash pop` — Apply and remove latest stash.
- `git stash list` — List stashes.

## Tagging
- `git tag` — List tags.
- `git tag <name>` — Create a tag.
- `git tag -d <name>` — Delete a tag.
- `git push origin <tagname>` — Push a tag.

## Miscellaneous
- `git blame <file>` — Show who changed what.
- `git cherry-pick <commit>` — Apply a commit from another branch.
- `git clean -f` — Remove untracked files.
- `git archive` — Create a tar or zip archive.
- `git bisect` — Binary search to find commit that introduced a bug.

---

## Help
- `git help <command>`
- `git <command> --help`

> For a full list, type `git` in your terminal or check the official documentation: https://git-scm.com/docs
